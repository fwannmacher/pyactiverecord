"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

import utilities.reflection.util
import utilities.string
import active_record.base

def belongs_to(owner, owner_as = None, foreign_key = None):
	def decorator(belonger):
		if not issubclass(belonger, active_record.base.ActiveRecord):
			raise TypeError("belonger must be a subclass of active_record.base.ActiveRecord")

		if not issubclass(owner, active_record.base.ActiveRecord):
			raise TypeError("owner must be a subclass of active_record.base.ActiveRecord")

		property_name = utilities.string.CaseConverter.convert_to_snake_case(owner_as if owner_as is not None else owner.__name__)

		def get_owner(self):
			return owner.find(getattr(self, foreign_key if foreign_key is not None else property_name + "_id"))

		utilities.reflection.util.PropertyAttacher.attach_property(belonger, property_name, owner, get_owner)

		return belonger

	return decorator
